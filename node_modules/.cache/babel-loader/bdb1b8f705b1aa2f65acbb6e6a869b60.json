{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yyb14214\\\\Desktop\\\\25\\\\smart-brain-frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '0dd3659dc05b467586ff6a97ed61973c'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = user => {\n      const {\n        id,\n        name,\n        email,\n        password,\n        entries,\n        joined\n      } = user;\n      this.setState({\n        user: {\n          id: id,\n          name: name,\n          email: email,\n          password: password,\n          entries: entries,\n          joined: joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      // console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      // console.log('click');\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRoutechange = route => {\n      if (route === 'signOut') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/yyb14214/Desktop/25/smart-brain-frontend/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","user","id","name","email","password","entries","joined","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRoutechange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js'\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({ apiKey: '0dd3659dc05b467586ff6a97ed61973c' });\n\n\nconst particlesOptions = {\n  particles: { number: { value: 200, density: { enable: true, value_area: 800 }} }\n}\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = { \n      input: '', imageUrl: '', box: {}, route: 'signIn', isSignedIn: false, \n      user: { id: '', name: '',  email: '', password: '', entries: 0, joined: '' }\n    }\n  }\n\n  loadUser = (user) => {\n    const { id, name, email, password, entries, joined } = user;\n    this.setState({ \n      user: { id: id, name: name,  email: email, password: password, entries: entries, joined: joined }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3001/').then(res => res.json()).then(console.log)\n  // }\n\n  displayFaceBox = (box) => { console.log(box); this.setState({box: box}) }\n\n  onInputChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    // console.log('click');\n\n    this.setState({ imageUrl: this.state.input })\n\n    app.models\n\t    .predict( Clarifai.FACE_DETECT_MODEL, this.state.input )\n      .then( ( response ) => {\n        this.displayFaceBox( this.calculateFaceLocation(response) )\n        \n      })\n      .catch( err => console.log( err ) );\n\n  }\n\n  onRoutechange = ( route ) => {\n    if (route === 'signOut') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, route, box, imageUrl } = this.state;\n    return (\n      <div className=\"App\">\n\n        <Particles className='particles' params={ particlesOptions } />\n        <Navigation isSignedIn={ isSignedIn } onRouteChange={ this.onRoutechange }/>\n\n        {\n          route === 'home' \n            ? <div>\n              <Logo />\n              <Rank name={ this.state.user.name } entries={ this.state.user.entries } />\n              <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n              <FaceRecognition box={ box } imageUrl={ imageUrl }/>\n            </div>\n            : (\n              route === 'signIn'\n                ? <SignIn loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n                : <Register loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n            )\n        }\n        \n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}