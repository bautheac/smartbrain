{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yyb14214\\\\Desktop\\\\28\\\\smart-brain-frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '0dd3659dc05b467586ff6a97ed61973c'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = user => {\n      const {\n        id,\n        name,\n        email,\n        password,\n        entries,\n        joined\n      } = user;\n      this.setState({\n        user: {\n          id: id,\n          name: name,\n          email: email,\n          password: password,\n          entries: entries,\n          joined: joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      // console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      if (this.state.input.length !== 0) {\n        this.setState({\n          imageUrl: this.state.input\n        });\n        app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(res => {\n          if (res) {\n            fetch('http://localhost:3001/image', {\n              method: \"put\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            }).then(res => res.json()).then(count => {\n              Object.assign(this.state.user, {\n                entries: count\n              });\n            }).catch(console.log());\n          }\n\n          this.displayFaceBox(this.calculateFaceLocation(res));\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onRoutechange = route => {\n      if (route === 'signOut') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/yyb14214/Desktop/28/smart-brain-frontend/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","constructor","loadUser","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","length","models","predict","FACE_DETECT_MODEL","then","res","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRoutechange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js'\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({ apiKey: '0dd3659dc05b467586ff6a97ed61973c' });\n\n\nconst particlesOptions = {\n  particles: { number: { value: 200, density: { enable: true, value_area: 800 }}}\n}\n\nconst initialState = {\n  input: '', imageUrl: '', box: {}, route: 'signIn', isSignedIn: false, \n  user: { id: '', name: '',  email: '', password: '', entries: 0, joined: '' }\n}\n\nclass App extends Component {\n\n  constructor() { super(); this.state = initialState }\n\n  loadUser = (user) => {\n    const { id, name, email, password, entries, joined } = user;\n    this.setState({ \n      user: { id: id, name: name,  email: email, password: password, entries: entries, joined: joined }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3001/').then(res => res.json()).then(console.log)\n  // }\n\n  displayFaceBox = (box) => { console.log(box); this.setState({box: box}) }\n\n  onInputChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    if (this.state.input.length !== 0) {\n      this.setState({ imageUrl: this.state.input })\n\n      app.models\n        .predict( Clarifai.FACE_DETECT_MODEL, this.state.input )\n        .then( res => {\n          if ( res ) {\n            fetch('http://localhost:3001/image', { \n            method: \"put\", headers: { \"Content-Type\": \"application/json\" }, \n            body: JSON.stringify({ id: this.state.user.id })})\n            .then(res => res.json())\n            .then(count => { Object.assign( this.state.user, { entries: count })})\n            .catch(console.log())\n          }\n          this.displayFaceBox( this.calculateFaceLocation(res) );\n        })\n        .catch( err => console.log( err ) );\n    }    \n  }\n\n  onRoutechange = ( route ) => {\n    if (route === 'signOut') { this.setState(initialState) } \n    else if (route === 'home') { this.setState({ isSignedIn: true }) }\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, route, box, imageUrl } = this.state;\n    return (\n      <div className=\"App\">\n\n        <Particles className='particles' params={ particlesOptions } />\n        <Navigation isSignedIn={ isSignedIn } onRouteChange={ this.onRoutechange }/>\n\n        {\n          route === 'home' \n            ? <div>\n              <Logo />\n              <Rank name={ this.state.user.name } entries={ this.state.user.entries } />\n              <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n              <FaceRecognition box={ box } imageUrl={ imageUrl }/>\n            </div>\n            : (\n              route === 'signIn'\n                ? <SignIn loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n                : <Register loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n            )\n        }\n        \n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}