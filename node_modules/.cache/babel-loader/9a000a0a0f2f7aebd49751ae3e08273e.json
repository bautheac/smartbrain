{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yyb14214\\\\Desktop\\\\28\\\\smart-brain-frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js';\nimport Particles from 'react-particles-js';\nimport './App.css';\nconst backEndpoint = \"https://pure-lowlands-01387.herokuapp.com\";\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 200,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = user => {\n      const {\n        id,\n        name,\n        email,\n        password,\n        entries,\n        joined\n      } = user;\n      this.setState({\n        user: {\n          id: id,\n          name: name,\n          email: email,\n          password: password,\n          entries: entries,\n          joined: joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      // console.log(event.target.value);\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      if (this.state.input) {\n        this.setState({\n          imageUrl: this.state.input\n        });\n        fetch(`${backEndpoint}/clarifai`, {\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        }).then(res => res.json()).then(res => {\n          if (res) {\n            fetch(`${backEndpoint}/image`, {\n              method: \"put\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            }).then(res => res.json()).then(count => {\n              Object.assign(this.state.user, {\n                entries: count\n              });\n            }).catch(console.log);\n          }\n\n          this.displayFaceBox(this.calculateFaceLocation(res));\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.onRoutechange = route => {\n      if (route === 'signOut') this.setState({\n        isSignedIn: false\n      });else if (route === 'signIn') this.setState(initialState);else if (route === 'home') this.setState({\n        isSignedIn: true\n      });\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      route,\n      box,\n      imageUrl\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })) : route === 'signIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRoutechange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/yyb14214/Desktop/28/smart-brain-frontend/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Particles","backEndpoint","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","password","entries","joined","App","constructor","loadUser","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","res","json","count","Object","assign","catch","err","onRoutechange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/logo/logo.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/signIn.js';\nimport Register from './components/register/register.js';\nimport Rank from './components/rank/rank.js'\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nconst backEndpoint = \"https://pure-lowlands-01387.herokuapp.com\";\n\nconst particlesOptions = {\n  particles: { number: { value: 200, density: { enable: true, value_area: 800 }}}\n}\n\nconst initialState = {\n  input: '', imageUrl: '', box: {}, route: 'signIn', isSignedIn: false, \n  user: { id: '', name: '',  email: '', password: '', entries: 0, joined: '' }\n}\n\nclass App extends Component {\n\n  constructor() { super(); this.state = initialState }\n\n  loadUser = (user) => {\n    const { id, name, email, password, entries, joined } = user;\n    this.setState({ \n      user: { id: id, name: name,  email: email, password: password, entries: entries, joined: joined }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  // componentDidMount(){\n  //   fetch('http://localhost:3001/').then(res => res.json()).then(console.log)\n  // }\n\n  displayFaceBox = (box) => { console.log(box); this.setState({box: box}) }\n\n  onInputChange = (event) => {\n    // console.log(event.target.value);\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    if (this.state.input) {\n\n      this.setState({ imageUrl: this.state.input })\n\n      fetch(`${ backEndpoint }/clarifai`, { \n        method: \"post\", headers: { \"Content-Type\": \"application/json\" }, \n        body: JSON.stringify({ input: this.state.input })})\n      .then(res => res.json())\n      .then( res => {\n        if ( res ) {\n          fetch( `${ backEndpoint }/image`, { \n          method: \"put\", headers: { \"Content-Type\": \"application/json\" }, \n          body: JSON.stringify({ id: this.state.user.id })})\n          .then(res => res.json())\n          .then(count => { Object.assign( this.state.user, { entries: count })})\n          .catch(console.log)\n        }\n        this.displayFaceBox( this.calculateFaceLocation(res) );\n      })\n      .catch( err => console.log( err ) );\n    }    \n  }\n\n  onRoutechange = ( route ) => {\n    if (route === 'signOut') this.setState({ isSignedIn: false });\n    else if (route === 'signIn') this.setState(initialState);\n    else if (route === 'home') this.setState({ isSignedIn: true });\n    this.setState({ route: route })\n  }\n\n  render() {\n    const { isSignedIn, route, box, imageUrl } = this.state;\n    return (\n      <div className=\"App\">\n\n        <Particles className='particles' params={ particlesOptions } />\n        <Navigation isSignedIn={ isSignedIn } onRouteChange={ this.onRoutechange }/>\n\n        {\n          route === 'home' \n            ? <div>\n              <Logo />\n              <Rank name={ this.state.user.name } entries={ this.state.user.entries } />\n              <ImageLinkForm onInputChange={ this.onInputChange } onButtonSubmit={ this.onButtonSubmit }/>\n              <FaceRecognition box={ box } imageUrl={ imageUrl }/>\n            </div>\n            : (\n              route === 'signIn'\n                ? <SignIn loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n                : <Register loadUser={ this.loadUser } onRouteChange={ this.onRoutechange }/>\n            )\n        }\n        \n      </div>\n    );\n  }  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}